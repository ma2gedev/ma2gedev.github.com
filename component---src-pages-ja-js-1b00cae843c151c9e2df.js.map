{"version":3,"sources":["webpack:///./src/pages/ja.js"],"names":["query","IndexPage","data","title","style","maxWidth","marginBottom","meJaYaml","name","sns","job","likes","map","like","allCareerJaYaml","edges","edge","career","node","works","work","between","main","technologies","join","allOssJaYaml","oss","href","uri","allTalksJaYaml","talk","country","year","event","allBooksJaYaml","book","author","work_as","allPostsJaYaml","post","language","allSocialJaYaml","social"],"mappings":"0LAmGaA,EAAK,aA2EHC,UAxKG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,wBACX,wCACA,yBAAKC,MAAO,CAAEC,SAAS,QAAUC,aAAa,YAC5C,kBAAC,IAAD,OAEF,2BAAIJ,EAAKK,SAASC,KAAlB,KAA0BN,EAAKK,SAASE,KACxC,2BAAIP,EAAKK,SAASG,KAClB,qCACA,4BACCR,EAAKK,SAASI,MAAMC,IAAI,SAAAC,GACvB,OAAO,4BAAKA,MAGd,6BACA,sCACCX,EAAKY,gBAAgBC,MAAMH,IAAI,SAAAI,GAC9B,IAAMC,EAASD,EAAKE,KACpB,OAAO,6BACL,4BAAKD,EAAOT,MACXS,EAAOE,MAAMP,IAAI,SAAAQ,GAChB,OAAO,4BACL,4BAAKA,EAAKC,QAAV,IAAoBD,EAAKjB,MACvB,4BACE,4BAAKiB,EAAKE,MACV,4BAAKF,EAAKG,aAAaC,KAAK,eAOxC,6BACA,oDACA,4BACCtB,EAAKuB,aAAaV,MAAMH,IAAI,SAAAI,GAC3B,IAAMU,EAAMV,EAAKE,KACjB,OAAO,4BACL,uBAAGS,KAAMD,EAAIE,KAAMF,EAAIlB,UAI3B,6BACA,qCACA,4BACCN,EAAK2B,eAAed,MAAMH,IAAI,SAAAI,GAC7B,IAAMc,EAAOd,EAAKE,KAClB,OAAO,4BACJY,EAAKC,QADD,IACWD,EAAKE,KADhB,IACsB,uBAAGL,KAAMG,EAAKF,KAAME,EAAK3B,OAD/C,OAC6D,uBAAGwB,KAAMG,EAAKG,MAAML,KAAME,EAAKG,MAAMzB,UAI3G,6BACA,qCACA,4BACCN,EAAKgC,eAAenB,MAAMH,IAAI,SAAAI,GAC7B,IAAMmB,EAAOnB,EAAKE,KAClB,OAAO,4BACJiB,EAAKH,KADD,IACO,uBAAGL,KAAMQ,EAAKP,KAAMO,EAAKhC,OADhC,IAC4CgC,EAAKC,OACtD,4BACE,4BAAI,2BAAID,EAAKE,eAKnB,6BACA,qCACA,4BACCnC,EAAKoC,eAAevB,MAAMH,IAAI,SAAAI,GAC7B,IAAMuB,EAAOvB,EAAKE,KAClB,OAAO,gCACHqB,EAAKC,SADF,KACa,uBAAGb,KAAMY,EAAKX,KAAMW,EAAKpC,WAI/C,6BACA,qCACA,4BACCD,EAAKuC,gBAAgB1B,MAAMH,IAAI,SAAAI,GAC9B,IAAM0B,EAAS1B,EAAKE,KACpB,OAAO,4BACL,uBAAGS,KAAMe,EAAOd,KAAMc,EAAOlC,UAKjC,6BACA,wCACA,2BAAG,uBAAGmB,KAAK,6BAAR,IAAsCzB,EAAKK,SAASE","file":"component---src-pages-ja-js-1b00cae843c151c9e2df.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"ls ma2ge{,dev} [JA]\" />\n    <h2>About Me</h2>\n    <div style={{ maxWidth: `150px`, marginBottom: `1.45rem` }}>\n      <Image />\n    </div>\n    <p>{data.meJaYaml.name} @{data.meJaYaml.sns}</p>\n    <p>{data.meJaYaml.job}</p>\n    <h3>Likes</h3>\n    <ul>\n    {data.meJaYaml.likes.map(like => {\n      return <li>{like}</li>\n    })}\n    </ul>\n    <hr/>\n    <h2>Career</h2>\n    {data.allCareerJaYaml.edges.map(edge => {\n      const career = edge.node\n      return <div>\n        <h3>{career.name}</h3>\n        {career.works.map(work => {\n          return <ul>\n            <li>{work.between} {work.title}\n              <ul>\n                <li>{work.main}</li>\n                <li>{work.technologies.join(\", \")}</li>\n              </ul>\n            </li>\n          </ul>\n        })}\n      </div>\n    })}\n    <hr/>\n    <h2>Open Source Software</h2>\n    <ul>\n    {data.allOssJaYaml.edges.map(edge => {\n      const oss = edge.node\n      return <li>\n        <a href={oss.uri}>{oss.name}</a>\n      </li>\n    })}\n    </ul>\n    <hr/>\n    <h2>Talks</h2>\n    <ul>\n    {data.allTalksJaYaml.edges.map(edge => {\n      const talk = edge.node\n      return <li>\n        {talk.country} {talk.year} <a href={talk.uri}>{talk.title}</a> at <a href={talk.event.uri}>{talk.event.name}</a>\n      </li>\n    })}\n    </ul>\n    <hr/>\n    <h2>Books</h2>\n    <ul>\n    {data.allBooksJaYaml.edges.map(edge => {\n      const book = edge.node\n      return <li>\n        {book.year} <a href={book.uri}>{book.title}</a> {book.author}\n        <ul>\n          <li><p>{book.work_as}</p></li>\n        </ul>\n      </li>\n    })}\n    </ul>\n    <hr/>\n    <h2>Posts</h2>\n    <ul>\n    {data.allPostsJaYaml.edges.map(edge => {\n      const post = edge.node\n      return <li>\n        [{post.language}] <a href={post.uri}>{post.title}</a>\n      </li>\n    })}\n    </ul>\n    <hr/>\n    <h2>Links</h2>\n    <ul>\n    {data.allSocialJaYaml.edges.map(edge => {\n      const social = edge.node\n      return <li>\n        <a href={social.uri}>{social.name}</a>\n      </li>\n    })\n    }\n    </ul>\n    <hr/>\n    <h2>Contacts</h2>\n    <p><a href=\"https://twitter.com/ma2ge\">@{data.meJaYaml.sns}</a></p>\n  </Layout>\n)\n\nexport const query = graphql`\nquery {\n  meJaYaml {\n    name\n    sns\n    job\n    likes\n  }\n  allSocialJaYaml {\n    edges {\n      node {\n        name\n        account\n        uri\n      }\n    }\n  }\n  allCareerJaYaml {\n    edges {\n      node {\n        name\n        works {\n          title\n          between\n          main\n          technologies\n        }\n      }\n    }\n  }\n  allOssJaYaml {\n    edges {\n      node {\n        name\n        uri\n      }\n    }\n  }\n  allBooksJaYaml {\n    edges {\n      node {\n        title\n        uri\n        author\n        year\n        work_as\n      }\n    }\n  }\n  allTalksJaYaml {\n    edges {\n      node {\n        title\n        year\n        uri\n        country\n        event {\n          name\n          uri\n        }\n      }\n    }\n  }\n  allPostsJaYaml {\n    edges {\n      node {\n        title\n        uri\n        language\n      }\n    }\n  }\n}\n`\n\nexport default IndexPage\n"],"sourceRoot":""}